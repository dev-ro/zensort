---
description: Scaffolds a complete, new feature for ZenSort, including the full feature-first directory structure, state management, repository, and service classes according to the YouTube feature architecture.
# This is an Agent Requested rule; it has no globs and is triggered by its description.
---
# Workflow: Scaffold New YouTube Feature

When I ask you to "scaffold the YouTube liked videos feature", you MUST perform the following steps in order. [cite_start]This is a complete implementation; do not use any placeholders or `// TODO` comments[cite: 21, 22].

### Plan

1. **Create Directory Structure:**
    - [cite_start]Create the feature-first directory structure under `lib/features/youtube/` with `presentation`, `domain`, and `data` subdirectories[cite: 4].
    - Inside `presentation`, create `bloc` and `widgets` folders.
    - Inside `data`, create `repositories` and `services` folders.

2. **Domain Layer:**
    - In `lib/features/youtube/domain/`, create a `youtube_repository.dart` file with an abstract class `YouTubeRepository`. It should define methods like `Future<List<Video>> getLikedVideos()` and `Future<void> syncLikedVideos()`.
    - [cite_start]Create a pure Dart `video_entity.dart` file for the business object[cite: 5].

3. **Data Layer:**
    - In `lib/features/youtube/data/services/`, create a `youtube_api_service.dart` file. It will handle the `googleapis` client and the direct API calls.
    - [cite_start]In `lib/features/youtube/data/repositories/`, create `youtube_repository_impl.dart` which implements `YouTubeRepository`[cite: 7]. [cite_start]It will contain the caching logic: check Firestore first, then call the API service, then update the cache[cite: 33, 35].

4. **Presentation Layer:**
    - In `lib/features/youtube/presentation/bloc/`, create the BLoC files: `youtube_bloc.dart`, `youtube_event.dart`, and `youtube_state.dart`.
    - The state should handle `loading`, `success(List<Video> videos)`, and `failure(String message)` states.
    - [cite_start]The BLoC will depend on the `YouTubeRepository` abstraction, not the implementation[cite: 13].

5. **Final Output:**
    - Provide me with a list of all the files you created.
    - [cite_start]Confirm that the implementation is complete and production-ready, adhering to the "no placeholders" mandate[cite: 22].
